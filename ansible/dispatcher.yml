---
- hosts: dispatchers
  become: true
  become_user: root
  tasks:
    - name: Add Docker official GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker APT repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present

    - name: Ensure docker and git are present
      apt:
        name:
          - docker-ce
          - git
        state: present
        update_cache: yes

    - name: Create/update docker daemon.json
      copy:
        dest: /etc/docker/daemon.json
        content: |
          {
            "mtu": 1450
          }
        mode: '0644'

    - name: Restart Docker
      ansible.builtin.systemd:
        name: docker
        state: restarted

    - name: Checkout this repo
      ansible.builtin.git:
        repo: "{{ dispatcher.repo }}"
        dest: "{{ dispatcher.dir }}"
        version: "{{ dispatcher.branch }}"
        update: yes

    - name: Install docker-compose-init.yml
      ansible.builtin.template:
        src: docker-compose-init.yml.j2
        dest: "{{ dispatcher.dir }}/docker-compose-init.yml"


    - name: Install docker-compose.yml
      ansible.builtin.template:
        src: docker-compose.yml.j2
        dest: "{{ dispatcher.dir }}/docker-compose.yml"

    - name: Ensure nginx config directory exists
      file:
        path: "{{ dispatcher.dir }}/nginx"
        state: directory
        mode: '0755'

    - name: Install ocm.json
      ansible.builtin.template:
        src: ocm.json.j2
        dest: "{{ dispatcher.dir }}/nginx/ocm.json"

    - name: Install nginx.conf
      ansible.builtin.template:
        src: nginx.conf.j2
        dest: "{{ dispatcher.dir }}/nginx/nginx.conf"

    - name: Install api-config file
      ansible.builtin.template:
        src: config.py.j2
        dest: "{{ dispatcher.dir }}/app/config.py"

    - name: Start docker init
      community.docker.docker_compose_v2:
        project_src: "{{ dispatcher.dir }}"
        state: present 
        files: ["docker-compose-init.yml"]
        remove_orphans: true

    - name: Stop docker init
      community.docker.docker_compose_v2:
        project_src: "{{ dispatcher.dir }}"
        state: absent 
        files: ["docker-compose-init.yml"]

    - name: Ensure docker-compose app is running
      community.docker.docker_compose_v2:
        project_src: "{{ dispatcher.dir }}"
        state: present 
        build: "always"
    
    - name: Clean dangling images
      community.docker.docker_prune:
        images: true
        images_filters:
          dangling: true
    
    - name: Ensure certbot renewal job that runs at midnight exists."
      ansible.builtin.cron:
        name: "certbot renew"
        minute: "0"
        hour: "0"
        job: "docker compose -f {{ dispatcher.dir }}/docker-compose.yml run --rm certbot && docker compose -f {{ dispatcher.dir }}/docker-compose.yml exec nginx nginx -s reload > /dev/null"
