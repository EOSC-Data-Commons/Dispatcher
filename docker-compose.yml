version: '3.8'

services:

  web:
    build: .
    ports:
      - 8004:8000
    command: uvicorn app.main:app --host 0.0.0.0 --reload
    volumes:
      - ./app:/usr/src/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis

  worker:
    build: .
    command: celery -A app.worker.celery worker --loglevel=info
    volumes:
      - .:/usr/src
    user: "celery" 
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - web
      - redis
  redis:
    image: redis:7

  nginx_ephemeral:
    image: nginxinc/nginx-unprivileged:latest  
    ports:
      - "80:80"
    volumes: 
      - ./nginx_helper/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certbot/www:/var/www/certbot
  modify_cert:
    image: alpine:latest
    volumes:
     - ./nginx/certbot/conf:/etc/certbot
    command: >
     sh -c 'cp /etc/certbot/live/dispatcher.edc.cloud.e-infra.cz/fullchain.pem /etc/certbot && \
            cp /etc/certbot/live/dispatcher.edc.cloud.e-infra.cz/privkey.pem /etc/certbot && \
            chmod 444 /etc/certbot/*.pem'
    depends_on: 
      - certbot 
  nginx:
    build: 
      dockerfile: ./nginx/Dockerfile
      context: .
    ports:
      - "443:443"
    volumes:
      - ./:/code
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    depends_on:
      - web
      - modify_cert
  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: ""
    command: >
      sh -c 'certbot certonly --webroot --webroot-path=/var/www/certbot --non-interactive --agree-tos -d dispatcher.edc.cloud.e-infra.cz' 
    depends_on: 
      - nginx_ephemeral
networks:
  default:

